if(WIN32)
	set(TRIANGLE_INCLUDE "")
	set(TRIANGLE_LIB "")
	set(FREETYPE_LIB "${PROJECT_SOURCE_DIR}/external/lib/freetype.lib")
	set(FREETYPE_LIBRARIES ${FREETYPE_LIB} "${PROJECT_SOURCE_DIR}/external/lib/zlib.lib")
	set(FREETYPE_INCLUDE "${PROJECT_SOURCE_DIR}/external/include")
	set(OPENGL_INCLUDE_DIRS "${PROJECT_SOURCE_DIR}/aergia/external/freeglut")
	set(OPENGL_LIBRARIES "${PROJECT_SOURCE_DIR}/aergia/external/freeglut/x64/freeglut.lib")
	set(VULKAN_INCLUDE_DIR "C:/VulkanSDK/1.0.3.1/Include")
	set(VULKAN_LIBRARY "")
	set(GLFW_INCLUDE_DIRS "${PROJECT_SOURCE_DIR}/aergia/external")
	set(GLFW_LIB "${PROJECT_SOURCE_DIR}/aergia/external/GLFW/glfw3.lib")
	set(GLEW_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/aergia/external/GLEW")
	set(GLEW_LIB "${PROJECT_SOURCE_DIR}/aergia/external/GLEW/x64/glew32.lib")
	set(TINYOBJLOADER_INCLUDE_DIR "")
	set(TINYOBJLOADER_LIB "")
else(WIN32)
  set(TRIANGLE_INCLUDE "${PROJECT_SOURCE_DIR}/external/include")
  set(TRIANGLE_LIB "${PROJECT_SOURCE_DIR}/external/lib/libtriangle.a")
  set(Z_LIB "${PROJECT_SOURCE_DIR}/external/lib/libz.a")
	set(PNG_LIB "${PROJECT_SOURCE_DIR}/external/lib/libpng16.a")
	set(FREETYPE_LIB "/usr/lib/libfreetype.so")
  set(FREETYPE_INCLUDE "${PROJECT_SOURCE_DIR}/external/include")
  set(FREETYPE_INCLUDE "/usr/include/freetype2")
	set(FREETYPE_LIBRARIES ${FREETYPE_LIB} ${PNG_LIB} ${Z_LIB})
	set(FREETYPE_LIBRARIES ${FREETYPE_LIB} png z)
	set(VULKAN_INCLUDE_DIR "")
	set(VULKAN_LIBRARY "")
	set(OPENGL_INCLUDE_DIRS "")
	set(OPENGL_LIBRARIES "")
	set(VULKAN_INCLUDE_DIR "")
	set(GLFW_INCLUDE_DIRS "${PROJECT_SOURCE_DIR}/external/include")
	set(GLFW_LIB "${PROJECT_SOURCE_DIR}/external/lib/libglfw3.a")
	set(GLFW_LIBRARIES GL GLU X11 Xxf86vm Xrandr pthread Xi dl ${GLFW_LIB})
	set(GLEW_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/external/include")
  set(GLEW_LIB "GLEW")
endif(WIN32)

if ("${VULKAN_INCLUDE_DIR}" STREQUAL "" OR "${VULKAN_LIBRARY}" STREQUAL "")
	# find_library(VULKAN_LIB NAMES vulkan-1 vulkan)
	# find_package(Vulkan REQUIRED)
endif("${VULKAN_INCLUDE_DIR}" STREQUAL "" OR "${VULKAN_LIBRARY}" STREQUAL "")

if ("${OPENGL_INCLUDE_DIRS}" STREQUAL "" OR "${OPENGL_LIBRARIES}" STREQUAL "")
	find_package(OpenGL REQUIRED)
endif("${OPENGL_INCLUDE_DIRS}" STREQUAL "" OR "${OPENGL_LIBRARIES}" STREQUAL "")

if ("${GLFW_INCLUDE_DIRS}" STREQUAL "")
	find_package(glfw3 REQUIRED)
endif("${GLFW_INCLUDE_DIRS}" STREQUAL "")

set(PONOS_INCLUDES "${TRIANGLE_INCLUDE}")
set(PONOS_LIBRARIES "${TRIANGLE_LIB}")

set(AERGIA_INCLUDES "${FREETYPE_INCLUDE}" "${GLFW_INCLUDE_DIRS}" "${GLEW_INCLUDE_DIR}" "${OPENGL_INCLUDE_DIRS}")
set(AERGIA_LIBRARIES ${GLFW_LIBRARIES} ${VULKAN_LIBRARY} ${OPENGL_LIBRARIES} ${GLEW_LIB} ${FREETYPE_LIBRARIES})

set(POSEIDON_INCLUDES "${CBLAS_INCLUDE_DIR}" "${OPENVDB_INCLUDE_DIR}" "${TBB_INCLUDE_DIR}")
set(POSEIDON_LIBRARIES ${TBB_LIB} ${OPENVDB_LIB})
add_definitions(-DOPENVDB_3_ABI_COMPATIBLE)
