set(TRIANGLE_INCLUDE "")
set(TRIANGLE_LIB "")
set(TETGEN_INCLUDE "")
set(TETGEN_LIB "")
set(TINYOBJLOADER_INCLUDE_DIR "")
set(TINYOBJLOADER_LIB "")
set(FREETYPE_LIB "")
set(FREETYPE_LIBRARIES ${FREETYPE_LIB})
set(FREETYPE_INCLUDE "")
set(GLEW_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/aergia/external/GLEW")

if(WIN32)
#	set(FREETYPE_LIB "C:/Program Files (x86)/GnuWin32/lib/freetype.lib")
#	set(FREETYPE_LIBRARIES ${FREETYPE_LIB} "${PROJECT_SOURCE_DIR}/external/lib/zlib.lib")
#	set(FREETYPE_INCLUDE "C:/Program Files (x86)/GnuWin32/include" "C:/Program Files (x86)/GnuWin32/include/freetype2")
	set(VULKAN_INCLUDE_DIR "C:/VulkanSDK/1.0.3.1/Include")
	set(VULKAN_LIBRARY "")
#	set(GLFW_INCLUDE_DIRS "${PROJECT_SOURCE_DIR}/aergia/external")
#	set(GLEW_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/aergia/external/GLEW")
set(GLEW_LIB "${PROJECT_SOURCE_DIR}/aergia/external/GLEW/Win32/glew32s.lib")
else(WIN32)
#  set(GLEW_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/external/include")
#  set(GLEW_LIB "GLEW")
#  set(FREETYPE_INCLUDE "/usr/include/freetype2")
  set(TETGEN_INCLUDE "/home/filipecn/Desktop/tetgen1.5.0")
  set(TETGEN_LIB "/home/filipecn/Desktop/tetgen1.5.0/libtet.a")
endif(WIN32)

find_package(PkgConfig)

# find_library(VULKAN_LIB NAMES vulkan-1 vulkan)
# find_package(Vulkan REQUIRED)

if(NOT TRAVIS)
  find_package(OpenGL QUIET REQUIRED)
  pkg_check_modules (GLFW QUIET glfw3)
  find_package(GLEW QUIET REQUIRED)
  pkg_check_modules (FREETYPE QUIET freetype2)
else(NOT TRAVIS)
  set(TRIANGLE_INCLUDE "")
  set(TETGEN_INCLUDE "")
endif(NOT TRAVIS)

if(MINGW)
 #   set(GLFW_LIB "${PROJECT_SOURCE_DIR}/aergia/external/GLFW/libglfw3dll.a")
 #   set(GLFW_LIB "C:/Projects/ponos/external/glfw/src/libglfw3dll.a")
 #   set(GLEW_LIB "${PROJECT_SOURCE_DIR}/aergia/external/GLEW/x64/libglew32d.a")
 #   set(FREETYPE_LIB "C:/Program Files (x86)/GnuWin32/lib/libfreetype.dll.a")
 # set(TETGEN_INCLUDE "C:/Users/fuiri/Desktop/tetgen1.5.0")
 # set(TETGEN_LIB "C:/Users/fuiri/Desktop/tetgen1.5.0/build/libtet.a")
endif(MINGW)

if(MINGW OR WIN32)
  include("${PROJECT_SOURCE_DIR}/wbuild/external/dependencies.txt")
else(MINGW OR WIN32)
  include("${PROJECT_SOURCE_DIR}/build/external/dependencies.txt")
endif(MINGW OR WIN32)

set(PONOS_INCLUDES "${TRIANGLE_INCLUDE}" "${TETGEN_INCLUDE}")
set(PONOS_LIBRARIES "${TRIANGLE_LIB}" "${TETGEN_LIB}")

set(AERGIA_INCLUDES "${FREETYPE_INCLUDE}" "${GLFW_INCLUDE_DIRS}" "${GLEW_INCLUDE_DIRS}" "${OPENGL_INCLUDE_DIRS}")
set(AERGIA_LIBRARIES ${GLEW_LIBRARIES} ${GLFW_LIB} ${GLFW_STATIC_LIBRARIES} ${VULKAN_LIBRARY} ${OPENGL_LIBRARIES} ${FREETYPE_LIB} ${FREETYPE_STATIC_LIBRARIES})

set(POSEIDON_INCLUDES "${CBLAS_INCLUDE_DIR}" "${OPENVDB_INCLUDE_DIR}" "${TBB_INCLUDE_DIR}")
set(POSEIDON_LIBRARIES ${TBB_LIB} ${OPENVDB_LIB})
add_definitions(-DOPENVDB_3_ABI_COMPATIBLE)
